geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima"])
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima"],)
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima"],)
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "La Rinconada",])
mod1
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?", title = "Evolution de HB en fonction de HBMASS (g/kg) par altitude") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?", title = "Evolution de HB en fonction de HBMASS (g) par altitude") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HCT.. ~ Hb.mass.kg..g...kg., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?", title = "Evolution de HCT en fonction de HBMASS (g/kg) par altitude") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?", title = "Evolution de HCT en fonction de HBMASS (g) par altitude") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
data = read.csv("data/datafinal.csv")
data = data[data$Age_categorie_binaire == "8-12 ans", ]
mod1 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Lima",])
mod2 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Cusco",])
mod3 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Juliaca",])
mod4 = lm(HB ~ Hb.mass..g., data = data[data$Ville_eval == "Rinconada",])
label_models_r2adj <- function(models) {
model_names <- names(models)
r2_labeled <- sapply(model_names, function(name) {
r2_adj <- summary(models[[name]])$adj.r.squared
sprintf("%s (R² adj = %.2f)", name, r2_adj)
})
names(models) <- r2_labeled
return(models)
}
models <- list(
"1 : Lima" = mod1,
"2 : Cusco" = mod2,
"3 : Juliaca" = mod3,
"4 : La Rinconada" = mod4
)
models <- label_models_r2adj(models)
coef_data <- bind_rows(lapply(seq_along(models), function(i) {
tidy(models[[i]], conf.int = TRUE) %>%
mutate(model = names(models)[i])  # ✅ utilise les noms renommés
}))
term_order <- coef_data %>%
group_by(term) %>%
summarise(n_models = n_distinct(model)) %>%
arrange(-n_models) %>%
pull(term)
# Réordonner les termes selon la fréquence croissante
coef_data <- coef_data %>%
mutate(term = factor(term, levels = term_order))
# Ajouter colonne de significativité (IC ne contenant pas 0)
coef_data <- coef_data %>%
filter(term != "(Intercept)") %>%  # Enlever intercept si souhaité
mutate(significant = ifelse(conf.low > 0 | conf.high < 0, "Oui", "Non"))
# Tracer le graphique
ggplot(coef_data, aes(x = estimate, y = term, color = model, shape = significant)) +
geom_point(position = position_dodge(width = 0.6), size = 3) +
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high),
height = 0.2, position = position_dodge(width = 0.6)) +
geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
labs(x = "Coefficient estimé", y = "Variable explicative",
color = "Modèle", shape = "Significatif ?", title = "Evolution de HCT en fonction de HBMASS (g) par altitude") +
scale_shape_manual(values = c("Non" = 7, "Oui" = 15)) +
theme_minimal() +
theme(legend.position = "bottom")
